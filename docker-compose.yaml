services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NPM_REGISTRY=${NPM_REGISTRY:-https://registry.npmmirror.com}
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qa-use
      - INNGEST_DEV=1
      - INNGEST_BASE_URL=http://inngest:8288
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - qause-network

  inngest:
    image: inngest/inngest
    command: 'inngest dev -u http://app:3000/api/inngest'
    ports:
      - '8288:8288'
    depends_on:
      - app
    networks:
      - qause-network

  postgres:
    restart: always
    image: postgres:15
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qa-use
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: postgres -c max_connections=1000
    networks:
      - qause-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NPM_REGISTRY=${NPM_REGISTRY:-https://registry.npmmirror.com}
    command: pnpm drizzle-kit migrate --config ./drizzle.config.ts
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qa-use
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - qause-network

networks:
  qause-network:
    driver: bridge
